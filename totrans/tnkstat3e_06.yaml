- en: Cumulative Distribution Functions
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 累积分布函数
- en: 原文：[https://allendowney.github.io/ThinkStats/chap04.html](https://allendowney.github.io/ThinkStats/chap04.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://allendowney.github.io/ThinkStats/chap04.html](https://allendowney.github.io/ThinkStats/chap04.html)
- en: Frequency tables and PMFs are the most familiar ways to represent distributions,
    but as we’ll see in this chapter, they have limitations. An alternative is the
    cumulative distribution function (CDF), which is useful for computing percentiles,
    and especially useful for comparing distributions.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 频率表和概率质量函数是表示分布最熟悉的方式，但正如我们将在本章中看到的，它们有局限性。一个替代方案是累积分布函数（CDF），它对于计算百分位数很有用，尤其是在比较分布时特别有用。
- en: Also in this chapter, we’ll compute percentile-based statistics to quantify
    the location, spread, and skewness of a distribution.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们还将计算基于百分位数的统计量来量化分布的位置、范围和偏度。
- en: '[Click here to run this notebook on Colab](https://colab.research.google.com/github/AllenDowney/ThinkStats/blob/v3/nb/chap04.ipynb).'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[在此处运行此笔记本](https://colab.research.google.com/github/AllenDowney/ThinkStats/blob/v3/nb/chap04.ipynb)。'
- en: '[PRE0]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[PRE1]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Percentiles and Percentile Ranks
  id: totrans-8
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 百分位数和百分位数排名
- en: If you have taken a standardized test, you probably got your results in the
    form of a raw score and a **percentile rank**. In this context, the percentile
    rank is the percentage of people who got the same score as you or lower. So if
    you are “in the 90th percentile,” you did as well as or better than 90% of the
    people who took the exam.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你参加过标准化考试，你可能会以原始分数和**百分位数排名**的形式收到你的成绩。在这个上下文中，百分位数排名是指得分与你相同或更低的人的百分比。所以如果你是“90百分位数”，那么你的表现与参加考试的人中的90%一样好或更好。
- en: To understand percentiles and percentile ranks, let’s consider an example based
    on running speeds. Some years ago I ran the James Joyce Ramble, which is a 10
    kilometer road race in Massachusetts. After the race, I downloaded the results
    to see how my time compared to other runners.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 要理解百分位数和百分位数排名，让我们考虑一个基于跑步速度的例子。几年前我参加了马萨诸塞州的詹姆斯·乔伊斯漫步10公里公路赛跑。赛后，我下载了成绩来查看我的时间与其他跑者的比较。
- en: Instructions for downloading the data are in the notebook for this chapter.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 下载数据的说明在本章的笔记本中。
- en: '[PRE3]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The `relay.py` module provides a function that reads the results and returns
    a Pandas `DataFrame`.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '`relay.py` 模块提供了一个函数，用于读取结果并返回 Pandas `DataFrame`。'
- en: '[PRE4]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '|  | Place | Div/Tot | Division | Guntime | Nettime | Min/Mile | MPH |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '|  | 排名 | 分组/总数 | 分组 | 总时间 | 净时间 | 每英里分钟 | 英里每小时 |'
- en: '| --- | --- | --- | --- | --- | --- | --- | --- |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- | --- | --- | --- |'
- en: '| 0 | 1 | 1/362 | M2039 | 30:43 | 30:42 | 4:57 | 12.121212 |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| 0 | 1 | 1/362 | M2039 | 30:43 | 30:42 | 4:57 | 12.121212 |'
- en: '| 1 | 2 | 2/362 | M2039 | 31:36 | 31:36 | 5:06 | 11.764706 |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '| 1 | 2 | 2/362 | M2039 | 31:36 | 31:36 | 5:06 | 11.764706 |'
- en: '| 2 | 3 | 3/362 | M2039 | 31:42 | 31:42 | 5:07 | 11.726384 |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
  zh: '| 2 | 3 | 3/362 | M2039 | 31:42 | 31:42 | 5:07 | 11.726384 |'
- en: '| 3 | 4 | 4/362 | M2039 | 32:28 | 32:27 | 5:14 | 11.464968 |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '| 3 | 4 | 4/362 | M2039 | 32:28 | 32:27 | 5:14 | 11.464968 |'
- en: '| 4 | 5 | 5/362 | M2039 | 32:52 | 32:52 | 5:18 | 11.320755 |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| 4 | 5 | 5/362 | M2039 | 32:52 | 32:52 | 5:18 | 11.320755 |'
- en: '`results` contains one row for each of 1633 runners who finished the race.
    The column we’ll use to quantify performance is `MPH`, which contains each runner’s
    average speed in miles per hour. We’ll select this column and use `values` to
    extract the speeds as a NumPy array.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '`results` 包含每个完成比赛的1633名跑者的一个行。我们将使用 `MPH` 这一列来量化性能，它包含每位跑者的平均速度（每小时英里）。我们将选择这一列并使用
    `values` 提取速度作为一个 NumPy 数组。'
- en: '[PRE5]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: I finished in 42:44, so we can find my row like this.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 我以42:44的成绩完成比赛，因此我们可以这样找到我的行。
- en: '[PRE6]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '|  | Place | Div/Tot | Division | Guntime | Nettime | Min/Mile | MPH |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '|  | 排名 | 分组/总数 | 分组 | 总时间 | 净时间 | 每英里分钟 | 英里每小时 |'
- en: '| --- | --- | --- | --- | --- | --- | --- | --- |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- | --- | --- | --- |'
- en: '| 96 | 97 | 26/256 | M4049 | 42:48 | 42:44 | 6:53 | 8.716707 |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '| 96 | 97 | 26/256 | M4049 | 42:48 | 42:44 | 6:53 | 8.716707 |'
- en: The index of my row is 96, so we can extract my speed like this.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 我的行索引是96，因此我们可以这样提取我的速度。
- en: '[PRE7]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: We can use `sum` to count the number of runners at my speed or slower.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用 `sum` 来计算与我速度或更慢的跑者的数量。
- en: '[PRE8]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '[PRE9]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: And we can use `mean` to compute the percentage of runners at my speed or slower.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用 `mean` 来计算与我速度或更慢的跑者的百分比。
- en: '[PRE10]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '[PRE11]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: The result is my percentile rank in the field, which was about 94%.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 结果是我的场内百分位数排名，大约是94%。
- en: More generally, the following function computes the percentile rank of a particular
    value in a sequence of values.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 更普遍地，以下函数计算序列中特定值的百分位数排名。
- en: '[PRE12]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: In `results`, the `Division` column indicates the division each runner was in,
    identified by gender and age range – for example, I was in the M4049 division,
    which includes male runners aged 40 to 49. We can use the `query` method to select
    the rows for people in my division and extract their speeds.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `results` 中，`Division` 列表示每个跑者所在的分组，通过性别和年龄范围来识别——例如，我所在的分组是 M4049，包括40至49岁的男性跑者。我们可以使用
    `query` 方法来选择我所在分组的行并提取他们的速度。
- en: '[PRE13]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Now we can use `percentile_rank` to compute my percentile rank in my division.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以使用 `percentile_rank` 来计算我在我所在分组的百分位数排名。
- en: '[PRE14]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '[PRE15]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Going in the other direction, if we are given a percentile rank, the following
    function finds the corresponding value in a sequence.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 反过来，如果我们给定一个百分位数排名，以下函数会找到序列中相应的值。
- en: '[PRE16]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '`n` is the number of elements in the sequence; `i` is the index of the element
    with the given percentile rank. When we look up a percentile rank, the corresponding
    value is called a **percentile**.'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '`n` 是序列中的元素数量；`i` 是具有给定百分位数排名的元素的索引。当我们查找百分位数排名时，相应的值被称为 **百分位数**。'
- en: '[PRE17]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '[PRE18]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: In my division, the 90th percentile was about 8.6 mph.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在我的分组中，第 90 个百分位数大约是 8.6 英里每小时。
- en: Now, some years after I ran that race, I am in the `M5059` division. So let’s
    see how fast I would have to run to have the same percentile rank in my new division.
    We can answer that question by converting my percentile rank in the `M4049` division,
    which is about 90.2%, to a speed in the `M5059` division.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在那场比赛多年之后，我进入了 `M5059` 分组。那么让我们看看我需要跑多快才能在新分组中获得相同的百分位数排名。我们可以通过将我在 `M4049`
    分组中的百分位数排名，大约 90.2%，转换为 `M5059` 分组中的速度来回答这个问题。
- en: '[PRE19]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '[PRE20]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: The person in the `M5059` division with the same percentile rank as me ran just
    over 8 mph. We can use `query` to find him.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 与我具有相同百分位数排名的 `M5059` 分组的人跑了略超过 8 英里每小时。我们可以使用 `query` 来找到他。
- en: '[PRE21]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '|  | Place | Div/Tot | Division | Guntime | Nettime | Min/Mile | MPH |'
  id: totrans-56
  prefs: []
  type: TYPE_TB
  zh: '|  | Place | Div/Tot | Division | Guntime | Nettime | Min/Mile | MPH |'
- en: '| --- | --- | --- | --- | --- | --- | --- | --- |'
  id: totrans-57
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- | --- | --- | --- |'
- en: '| 222 | 223 | 18/171 | M5059 | 46:30 | 46:25 | 7:29 | 8.017817 |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
  zh: '| 222 | 223 | 18/171 | M5059 | 46:30 | 46:25 | 7:29 | 8.017817 |'
- en: He finished in 46:25 and came in 18th out of 171 people in his division.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 他以 46:25 的成绩完成比赛，在他所在分组中排名第 18，共有 171 人。
- en: With this introduction to percentile ranks and percentiles, we are ready for
    cumulative distribution functions.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 通过对百分位数和百分位数的介绍，我们为累积分布函数做好了准备。
- en: CDFs
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: CDFs
- en: A **cumulative distribution function**, or CDF, is another way to describe the
    distribution of a set of values, along with a frequency table or PMF. Given a
    value `x`, the CDF computes the fraction of values less than or equal to `x`.
    As an example, we’ll start with a short sequence.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '**累积分布函数**，或称为 CDF，是描述一组值分布的另一种方式，与频率表或 PMF 一起。给定一个值 `x`，CDF 计算小于或等于 `x` 的值的比例。作为一个例子，我们将从一个简短的序列开始。'
- en: '[PRE22]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: One way to compute a CDF is to start with a PMF. Here is a `Pmf` object that
    represents the distribution of values in `t`.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 CDF 的一种方法是从 PMF 开始。这里有一个 `Pmf` 对象，它代表了 `t` 中值的分布。
- en: '[PRE23]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '|  | probs |'
  id: totrans-66
  prefs: []
  type: TYPE_TB
  zh: '|  | probs |'
- en: '| --- | --- |'
  id: totrans-67
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| 1 | 0.2 |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '| 1 | 0.2 |'
- en: '| 2 | 0.4 |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
  zh: '| 2 | 0.4 |'
- en: '| 3 | 0.2 |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '| 3 | 0.2 |'
- en: '| 5 | 0.2 |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '| 5 | 0.2 |'
- en: As we saw in the previous chapter, we can use the bracket operator to look up
    a value in a `Pmf`.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 如前一章所述，我们可以使用方括号操作符在 `Pmf` 中查找值。
- en: '[PRE24]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '[PRE25]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: The result is the proportion of values in the sequence equal to the given value.
    In this example, two out of five values are equal to `2`, so the result is 0.4.
    We can also think of this proportion as the probability that a randomly chosen
    value from the sequence equals `2`.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 结果是序列中等于给定值的值的比例。在这个例子中，五个值中有两个等于 `2`，所以结果是 0.4。我们也可以将这个比例视为从序列中随机选择一个值等于 `2`
    的概率。
- en: '`Pmf` has a `make_cdf` method that computes the cumulative sum of the probabilities
    in the `Pmf`.'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '`Pmf` 有一个 `make_cdf` 方法，它计算 `Pmf` 中概率的累积和。'
- en: '[PRE26]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '|  | probs |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
  zh: '|  | probs |'
- en: '| --- | --- |'
  id: totrans-79
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| 1 | 0.2 |'
  id: totrans-80
  prefs: []
  type: TYPE_TB
  zh: '| 1 | 0.2 |'
- en: '| 2 | 0.6 |'
  id: totrans-81
  prefs: []
  type: TYPE_TB
  zh: '| 2 | 0.6 |'
- en: '| 3 | 0.8 |'
  id: totrans-82
  prefs: []
  type: TYPE_TB
  zh: '| 3 | 0.8 |'
- en: '| 5 | 1.0 |'
  id: totrans-83
  prefs: []
  type: TYPE_TB
  zh: '| 5 | 1.0 |'
- en: The result is a `Cdf` object, which is a kind of Pandas `Series`. We can use
    the bracket operator to look up a value.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 结果是一个 `Cdf` 对象，它是一种 Pandas `Series` 类型。我们可以使用方括号操作符来查找值。
- en: '[PRE27]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: '[PRE28]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: The result is the proportion of values in the sequence less than or equal to
    the given value. In this example, three out of five values in the sequence are
    less than or equal to `2`, so the result is 0.6. We can also think of this proportion
    as the probability that a randomly chosen value from the sequence is less than
    or equal to `2`.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 结果是序列中小于或等于给定值的值的比例。在这个例子中，序列中有三个值小于或等于`2`，所以结果是0.6。我们也可以将这个比例视为从序列中随机选择一个值小于或等于`2`的概率。
- en: We can use parentheses to call the `Cdf` object like a function.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用括号来像函数一样调用`Cdf`对象。
- en: '[PRE29]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: '[PRE30]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: The cumulative distribution function is defined for all numbers, not just the
    ones that appear in the sequence.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 累积分布函数对所有数字都定义，而不仅仅是序列中出现的数字。
- en: '[PRE31]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: '[PRE32]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: To visualize the `Cdf`, we can use the `step` method, which plots the `Cdf`
    as a step function.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 为了可视化累积分布函数（Cdf），我们可以使用`step`方法，该方法将累积分布函数绘制为阶梯函数。
- en: '[PRE33]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: '![_images/9d2e9ff444c6bf56e6b534478952beeb0821525d8775c45979726bd52003d32f.png](../Images/6223b8a3d69c903f60571154b84c6183.png)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../Images/6223b8a3d69c903f60571154b84c6183.png)'
- en: As a second example, let’s make a `Cdf` that represents the distribution of
    running speeds from the previous section. The `Cdf` class provides a `from_seq`
    function we can use to create a `Cdf` object from a sequence.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 作为第二个例子，让我们创建一个表示上一节中跑步速度分布的累积分布函数（Cdf）。`Cdf`类提供了一个`from_seq`函数，我们可以用它从序列中创建一个`Cdf`对象。
- en: '[PRE34]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: And here’s what it looks like – the vertical line is at my speed.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是这个样子——垂直线是我的速度。
- en: '[PRE35]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: '![_images/2bc46a52e68ac6ac83090f0315cdd087e8549f3ac5e9b4acc021bfbf6c3616e7.png](../Images/662d72a6f033d90289978ea18d2f5310.png)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../Images/662d72a6f033d90289978ea18d2f5310.png)'
- en: If we look up my speed, the result is the fraction of runners at my speed or
    slower. If we multiply by 100, we get my percentile rank.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们查看我的速度，结果是与我速度或更慢的跑者的比例。如果我们乘以100，我们得到我的百分位数排名。
- en: '[PRE36]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: '[PRE37]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: So that’s one way to think about the `Cdf` – given a value, it computes something
    like a percentile rank, except that it’s a proportion between 0 and 1 rather than
    a percentage between 0 and 100.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，这是思考累积分布函数的一种方式——给定一个值，它计算类似于百分位数排名的东西，只不过它是在0到1之间的比例，而不是0到100之间的百分比。
- en: '`Cdf` provides an `inverse` method that computes the inverse of the cumulative
    distribution function – given a proportion between 0 and 1, it finds the corresponding
    value.'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '`Cdf`提供了一个`inverse`方法，它计算累积分布函数的逆——给定0到1之间的比例，它找到相应的值。'
- en: For example, if someone says they ran as fast or faster than 50% of the field,
    we can find their speed like this.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果有人说他们跑得和50%的选手一样快或更快，我们可以这样找到他们的速度。
- en: '[PRE38]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: '[PRE39]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: If you have a proportion and you use the inverse CDF to find the corresponding
    value, the result is called a **quantile** – so the inverse CDF is sometimes called
    the quantile function.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你有一个比例，并且使用逆CDF找到相应的值，结果被称为**分位数**——因此逆CDF有时被称为分位数函数。
- en: If you have have a quantile and you use the CDF to find the corresponding proportion,
    the result doesn’t really have a name, strangely. To be consistent with percentile
    and percentile rank, it could be called a “quantile rank”, but as far as I can
    tell, no one calls it that. Most often, it is just called a “cumulative probability”.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你有一个分位数，并且使用CDF找到相应的比例，结果实际上并没有一个名字，奇怪的是。为了与百分位数和百分位数排名保持一致，它可以被称为“分位数排名”，但据我所知，没有人这样称呼它。最常见的是，它只是被称为“累积概率”。
- en: '## Comparing CDFs'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '## 比较累积分布函数'
- en: 'CDFs are especially useful for comparing distributions. As an example, let’s
    compare the distribution of birth weights for first babies and others. We’ll load
    the NSFG dataset again, and divide it into three `DataFrames`: all live births,
    first babies, and others.'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 累积分布函数在比较分布时特别有用。作为一个例子，让我们比较第一个孩子和其他人的出生体重的分布。我们将再次加载NSFG数据集，并将其分为三个`DataFrames`：所有活产婴儿、第一个孩子和其他人。
- en: The following cells download the data files and install `statadict`, which we
    need to read the data.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的单元格下载数据文件并安装`statadict`，这是我们读取数据所需的。
- en: '[PRE40]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: '[PRE41]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: '[PRE42]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: From `firsts` and `others` we’ll select total birth weights in pounds, using
    `dropna` to remove values that are `nan`.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 从`firsts`和`others`中，我们将选择总出生体重（以磅为单位），使用`dropna`删除`nan`值。
- en: '[PRE43]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: '[PRE44]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: '[PRE45]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: '[PRE46]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: It looks like first babies are a little lighter on average. But there are several
    ways a difference like that could happen – for example, there might be a small
    number of first babies who are especially light, or a small number of other babies
    who are especially heavy. In those cases, the distributions would have different
    shapes. As another possibility, the distributions might have the same shape, but
    different locations.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来，第一个孩子平均体重略轻。但是，有几种方式会导致这种差异——例如，可能有一小部分第一个孩子特别轻，或者一小部分其他孩子特别重。在这些情况下，分布会有不同的形状。另一种可能性是，分布可能有相同的形状，但位置不同。
- en: To compare the distributions, we can try plotting the PMFs.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 要比较分布，我们可以尝试绘制概率质量函数（PMF）。
- en: '[PRE47]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: But as we can see in the following figure, it doesn’t work very well.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 但正如我们可以在以下图中看到的，它并不奏效。
- en: '[PRE48]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: '![_images/5ceff1964b7e595815042c6a25cb49238d959a616a431eca6c5a4520e4e9e8c4.png](../Images/40ff5e508db7d21c10ac38790438b34c.png)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../Images/40ff5e508db7d21c10ac38790438b34c.png)'
- en: I adjusted the width and transparency of the bars to show the distributions
    as clearly as possible, but it is hard to compare them. There are many peaks and
    valleys, and some apparent differences, but it is hard to tell which of these
    features are meaningful. Also, it is hard to see overall patterns; for example,
    it is not visually apparent which distribution has the higher mean.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 我调整了柱子的宽度和透明度，以尽可能清楚地显示分布，但很难进行比较。有许多峰和谷，以及一些明显的变化，但很难判断哪些特征是有意义的。此外，很难看到整体模式；例如，从视觉上不明显哪个分布的均值更高。
- en: These problems can be mitigated by binning the data – that is, dividing the
    range of quantities into non-overlapping intervals and counting the number of
    quantities in each bin. Binning can be useful, but it is tricky to get the size
    of the bins right. If they are big enough to smooth out noise, they might also
    smooth out useful information.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 这些问题可以通过数据分箱来解决——也就是说，将数量的范围分成不重叠的区间，并计算每个箱中数量的数量。分箱可能很有用，但很难正确确定箱的大小。如果它们足够大以平滑噪声，它们也可能平滑掉有用的信息。
- en: A good alternative is to plot the CDFs.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 一个好的替代方案是绘制累积分布函数（CDF）。
- en: '[PRE49]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: Here’s what they look like.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 它们看起来是这样的。
- en: '[PRE50]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: '![_images/38f4c729cdfc8ab726197491c97cdd23e815aa9c30fc9369ef7c3f83edd2a453.png](../Images/471ac6e643ae8ca2ba5d21c878dadbc3.png)'
  id: totrans-135
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../Images/471ac6e643ae8ca2ba5d21c878dadbc3.png)'
- en: This figure makes the shape of the distributions, and the differences between
    them, much clearer. The curve for first babies is consistently to the left of
    the curve for others, which indicates that first babies are slightly lighter throughout
    the distribution – with a larger discrepancy above the midpoint.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 这张图使得分布的形状和它们之间的差异更加清晰。第一个孩子的曲线始终位于其他人的曲线左侧，这表明第一个孩子在整个分布中略轻——在中间点以上的差异更大。
- en: Percentile-Based Statistics
  id: totrans-137
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 百分位统计量
- en: In [Chapter 3](chap03.html#section-summarizing-pmfs) we computed the arithmetic
    mean, which identifies a central point in a distribution, and the standard deviation,
    which quantifies how spread out the distribution is. And in a previous exercise
    we computed skewness, which indicates whether a distribution is skewed left or
    right. One drawback of all of these statistics is that they are sensitive to outliers.
    A single extreme value in a dataset can have a large effect on mean, standard
    deviation, and skewness.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第3章](chap03.html#section-summarizing-pmfs)中，我们计算了算术平均值，它确定了分布中的中心点，以及标准差，它量化了分布的分散程度。在之前的练习中，我们计算了偏度，它表明分布是左偏还是右偏。所有这些统计量的一个缺点是它们对异常值敏感。数据集中单个极端值可以对均值、标准差和偏度产生重大影响。
- en: An alternative is to use statistics that are based on percentiles of the distribution,
    which tend to be more **robust**, which means that they are less sensitive to
    outliers. To demonstrate, let’s load the NSFG data again without doing any data
    cleaning.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 一个替代方案是使用基于分布百分位的统计量，这些统计量通常更**稳健**，这意味着它们对异常值不太敏感。为了演示，让我们再次加载NSFG数据，但不进行任何数据清理。
- en: '[PRE51]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: Recall that birth weight is recorded in two columns, one for the pounds and
    one for the ounces.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，出生体重记录在两列中，一列是磅，另一列是盎司。
- en: '[PRE52]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: If we make a `Hist` object with the values from `birthwgt_oz`, we can see that
    they include the special values 97, 98, and 99, which indicate missing data.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们用`birthwgt_oz`中的值创建一个`Hist`对象，我们可以看到它包括特殊的值97、98和99，这些值表示缺失数据。
- en: '[PRE53]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: '|  | freqs |'
  id: totrans-145
  prefs: []
  type: TYPE_TB
  zh: '|  | 频率 |'
- en: '| --- | --- |'
  id: totrans-146
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| birthwgt_oz |  |'
  id: totrans-147
  prefs: []
  type: TYPE_TB
  zh: '| birthwgt_oz |  |'
- en: '| --- | --- |'
  id: totrans-148
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| 14.0 | 475 |'
  id: totrans-149
  prefs: []
  type: TYPE_TB
  zh: '| 14.0 | 475 |'
- en: '| 15.0 | 378 |'
  id: totrans-150
  prefs: []
  type: TYPE_TB
  zh: '| 15.0 | 378 |'
- en: '| 97.0 | 1 |'
  id: totrans-151
  prefs: []
  type: TYPE_TB
  zh: '| 97.0 | 1 |'
- en: '| 98.0 | 1 |'
  id: totrans-152
  prefs: []
  type: TYPE_TB
  zh: '| 98.0 | 1 |'
- en: '| 99.0 | 46 |'
  id: totrans-153
  prefs: []
  type: TYPE_TB
  zh: '| 99.0 | 46 |'
- en: The `birthwgt_lb` column includes the same special values; it also includes
    the value 51, which has to be a mistake.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: '`birthwgt_lb`列包括相同的特殊值；它还包括值51，这肯定是一个错误。'
- en: '[PRE54]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: '|  | freqs |'
  id: totrans-156
  prefs: []
  type: TYPE_TB
  zh: '|  | freqs |'
- en: '| --- | --- |'
  id: totrans-157
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| birthwgt_lb |  |'
  id: totrans-158
  prefs: []
  type: TYPE_TB
  zh: '| birthwgt_lb |  |'
- en: '| --- | --- |'
  id: totrans-159
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| 15.0 | 1 |'
  id: totrans-160
  prefs: []
  type: TYPE_TB
  zh: '| 15.0 | 1 |'
- en: '| 51.0 | 1 |'
  id: totrans-161
  prefs: []
  type: TYPE_TB
  zh: '| 51.0 | 1 |'
- en: '| 97.0 | 1 |'
  id: totrans-162
  prefs: []
  type: TYPE_TB
  zh: '| 97.0 | 1 |'
- en: '| 98.0 | 1 |'
  id: totrans-163
  prefs: []
  type: TYPE_TB
  zh: '| 98.0 | 1 |'
- en: '| 99.0 | 57 |'
  id: totrans-164
  prefs: []
  type: TYPE_TB
  zh: '| 99.0 | 57 |'
- en: Now let’s imagine two scenarios. In one scenario, we clean these variables by
    replacing missing and invalid values with `nan`, and then compute total weight
    in pounds. Dividing `birthwgt_oz_clean` by 16 converts it to pounds in decimal.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们想象两种情况。在一种情况下，我们通过用`nan`替换缺失和无效值来清理这些变量，然后计算以磅为单位的总重量。将`birthwgt_oz_clean`除以16将其转换为十进制磅。
- en: '[PRE55]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: In the other scenario, we neglect to clean the data and accidentally compute
    the total weight with these bogus values.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 在另一种情况下，我们忽略了数据清理，并意外地用这些假数据计算了总重量。
- en: '[PRE56]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: The bogus dataset contains only 49 bogus values, which is about 0.5% of the
    data.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 假数据集只包含49个假数据，大约是数据的0.5%。
- en: '[PRE57]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: '[PRE58]'
  id: totrans-171
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: Now let’s compute the mean of the data in both scenarios.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们计算两种情况下的数据平均值。
- en: '[PRE59]'
  id: totrans-173
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: '[PRE60]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: The bogus values have a moderate effect on the mean. If we take the mean of
    the cleaned data to be correct, the mean of the bogus data is off by less than
    1%.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 假数据对平均值有适度的影响。如果我们认为清洁数据的平均值是正确的，那么假数据的平均值偏差不到1%。
- en: '[PRE61]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: '[PRE62]'
  id: totrans-177
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: An error like that might go undetected – but now let’s see what happens to the
    standard deviations.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 这样的错误可能不会被察觉——但现在让我们看看标准差会发生什么变化。
- en: '[PRE63]'
  id: totrans-179
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: '[PRE64]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: '[PRE65]'
  id: totrans-181
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: '[PRE66]'
  id: totrans-182
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: The standard deviation of the bogus data is off by almost 50%, so that’s more
    noticeable. Finally, here’s the skewness of the two datasets.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 假数据的标准差偏差接近50%，因此这更加明显。最后，这是两个数据集的偏度。
- en: '[PRE67]'
  id: totrans-184
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: '[PRE68]'
  id: totrans-185
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: '[PRE69]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: '[PRE70]'
  id: totrans-187
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: '[PRE71]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE71]'
- en: The skewness of the bogus dataset is off by a factor of almost 40, and it has
    the wrong sign! With the outliers added to the data, the distribution is strongly
    skewed to the right, as indicated by large positive skewness. But the distribution
    of the valid data is slightly skewed to the left, as indicated by small negative
    skewness.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 假数据集的偏度偏差接近40倍，并且符号错误！添加了异常值后，分布强烈向右偏斜，正如大正偏度所指示的。但有效数据的分布略微向左偏斜，正如小负偏度所指示的。
- en: These results show that a small number of outliers have a moderate effect on
    the mean, a strong effect on the standard deviation, and a disastrous effect on
    skewness.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 这些结果表明，少数异常值对平均值有适度的影响，对标准差有强烈的影响，对偏度有灾难性的影响。
- en: 'An alternative is to use statistics based on percentiles. Specifically:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种方法是使用基于百分比的统计。具体来说：
- en: The median, which is the 50th percentile, identifies a central point in a distribution,
    like the mean.
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 中位数，即第50百分位数，像平均值一样，在分布中确定一个中心点。
- en: The interquartile range, which is the difference between the 25th and 75th percentiles,
    quantifies the spread of the distribution, like the standard deviation.
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 四分位距，即第25百分位数和第75百分位数之间的差值，量化了分布的分散程度，就像标准差一样。
- en: The quartile skewness uses the quartiles of the distribution (25th, 50th, and
    75th percentiles) to quantify the skewness.
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 四分位距偏度使用分布的四分位数（第25、第50和第75百分位数）来量化偏度。
- en: The `Cdf` object provides an efficient way to compute these percentile-based
    statistics. To demonstrate, let’s make a `Cdf` object from the bogus and clean
    datasets.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: '`Cdf`对象提供了一种高效的方法来计算这些基于百分位的统计量。为了演示，让我们从假数据和清洁数据集中创建一个`Cdf`对象。'
- en: '[PRE72]'
  id: totrans-196
  prefs: []
  type: TYPE_PRE
  zh: '[PRE72]'
- en: The following function takes a `Cdf` and uses its `inverse` method to compute
    the 50th percentile, which is the median (at least, it is one way to define the
    median of a dataset).
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 以下函数接受一个`Cdf`并使用其`inverse`方法来计算第50百分位数，即中位数（至少，这是定义数据集中位数的一种方法）。
- en: '[PRE73]'
  id: totrans-198
  prefs: []
  type: TYPE_PRE
  zh: '[PRE73]'
- en: Now we can compute the median of both datasets.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以计算两个数据集的中位数。
- en: '[PRE74]'
  id: totrans-200
  prefs: []
  type: TYPE_PRE
  zh: '[PRE74]'
- en: '[PRE75]'
  id: totrans-201
  prefs: []
  type: TYPE_PRE
  zh: '[PRE75]'
- en: The results are identical, so in this case, the outliers have no effect on the
    median at all. In general, outliers have a smaller effect on the median than on
    the mean.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 结果是相同的，因此在这种情况下，异常值对中位数没有任何影响。一般来说，异常值对中位数的影响小于对平均值的影响。
- en: The **interquartile range** (IQR) is the difference between the 75th and 25th
    percentiles. The following function takes a `Cdf` and returns the IQR.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: '**四分位距**（IQR）是第75百分位数和第25百分位数之间的差值。以下函数接受一个`Cdf`并返回IQR。'
- en: '[PRE76]'
  id: totrans-204
  prefs: []
  type: TYPE_PRE
  zh: '[PRE76]'
- en: And here are the interquartile ranges of the two datasets.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是两个数据集的四分位距。
- en: '[PRE77]'
  id: totrans-206
  prefs: []
  type: TYPE_PRE
  zh: '[PRE77]'
- en: '[PRE78]'
  id: totrans-207
  prefs: []
  type: TYPE_PRE
  zh: '[PRE78]'
- en: In general, outliers have less effect on the IQR than on the standard deviation
    – in this case they have no effect at all.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，异常值对四分位距的影响小于对标准差的影响——在这种情况下，它们完全没有影响。
- en: 'Finally, here’s a function that computes quartile skewness, which depends on
    three statistics:'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，这是一个计算四分位数偏斜的函数，它依赖于三个统计数据：
- en: The median,
  id: totrans-210
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 中位数，
- en: The midpoint of 25th and 75th percentiles, and
  id: totrans-211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第25百分位数和第75百分位数的中间值，
- en: The semi-IQR, which is half of the IQR.
  id: totrans-212
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 半四分位距，即四分位距的一半。
- en: '[PRE79]'
  id: totrans-213
  prefs: []
  type: TYPE_PRE
  zh: '[PRE79]'
- en: And here’s the quartile skewness for the two datasets.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是两个数据集的四分位数偏斜。
- en: '[PRE80]'
  id: totrans-215
  prefs: []
  type: TYPE_PRE
  zh: '[PRE80]'
- en: '[PRE81]'
  id: totrans-216
  prefs: []
  type: TYPE_PRE
  zh: '[PRE81]'
- en: The small number of outliers in these examples has no effect on the quartile
    skewness. These examples show that percentile-based statistics are less sensitive
    to outliers and errors in the data.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 这些例子中的少量异常值对这些四分位数偏斜没有影响。这些例子表明，基于百分位数的统计对异常值和数据中的错误不太敏感。
- en: Random Numbers
  id: totrans-218
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 随机数
- en: '`Cdf` objects provide an efficient way to generate random numbers from a distribution.
    First we generate random numbers from a uniform distribution between 0 and 1.
    Then we evaluate the inverse CDF at those points. The following function implements
    this algorithm.'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: '`Cdf` 对象提供了一种高效的方法来从分布中生成随机数。首先，我们从0到1之间的均匀分布中生成随机数。然后，在这些点上评估累积分布函数（CDF）的逆函数。以下函数实现了此算法。'
- en: '[PRE82]'
  id: totrans-220
  prefs: []
  type: TYPE_PRE
  zh: '[PRE82]'
- en: To demonstrate, let’s generate a random sample of running speeds.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 为了演示，让我们生成一个跑步速度的随机样本。
- en: '[PRE83]'
  id: totrans-222
  prefs: []
  type: TYPE_PRE
  zh: '[PRE83]'
- en: To confirm that it worked, we can compare the CDFs of the sample and the original
    dataset.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 为了确认它是否有效，我们可以比较样本和原始数据集的累积分布函数（CDF）。
- en: '[PRE84]'
  id: totrans-224
  prefs: []
  type: TYPE_PRE
  zh: '[PRE84]'
- en: '![_images/f5dd82c9efd6929670f0fcb6a83cc6d2f724a42d92b438d5e2eabf2df4000d2a.png](../Images/d51cd2f42c53b184bd1289fc6de1ba5f.png)'
  id: totrans-225
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../Images/d51cd2f42c53b184bd1289fc6de1ba5f.png)'
- en: 'The sample follows the distribution of the original data. To understand how
    this algorithm works, consider this question: Suppose we choose a random sample
    from the population of running speeds and look up the percentile ranks of the
    speeds in the sample. Now suppose we compute the CDF of the percentile ranks.
    What do you think it will look like?'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 样本遵循原始数据的分布。为了理解此算法的工作原理，考虑以下问题：假设我们从跑步速度的总体中随机选择一个样本，并查找样本中速度的百分位数排名。现在假设我们计算百分位数排名的累积分布函数（CDF）。你认为它会是什么样子？
- en: Let’s find out. Here are the percentile ranks for the sample we generated.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来探究一下。以下是我们在生成的样本中的百分位数排名。
- en: '[PRE85]'
  id: totrans-228
  prefs: []
  type: TYPE_PRE
  zh: '[PRE85]'
- en: And here is the CDF of the percentile ranks.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是百分位数排名的累积分布函数（CDF）。
- en: '[PRE86]'
  id: totrans-230
  prefs: []
  type: TYPE_PRE
  zh: '[PRE86]'
- en: '![_images/52f3765a77c885aca02c14ff7ccc676cf5ecd89b5fc49c8c20618034fcb053f9.png](../Images/8a0850f37951301fdff6c19ab35c16e6.png)'
  id: totrans-231
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../Images/8a0850f37951301fdff6c19ab35c16e6.png)'
- en: The CDF of the percentile ranks is close to a straight line between 0 and 1.
    And that makes sense, because in any distribution, the proportion with percentile
    rank less than 50% is 0.5; the proportion with percentile rank less than 90% is
    0.9, and so on.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 百分位数排名的累积分布函数（CDF）在0到1之间接近一条直线。这是有道理的，因为在任何分布中，百分位数排名小于50%的比例是0.5；百分位数排名小于90%的比例是0.9，依此类推。
- en: '`Cdf` provides a `sample` method that uses this algorithm, so we could also
    generate a sample like this.'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: '`Cdf` 提供了一个使用此算法的 `sample` 方法，因此我们也可以生成这样的样本。'
- en: '[PRE87]'
  id: totrans-234
  prefs: []
  type: TYPE_PRE
  zh: '[PRE87]'
- en: Glossary
  id: totrans-235
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 术语表
- en: '**percentile rank**: The percentage of values in a distribution that are less
    than or equal to a given quantity.'
  id: totrans-236
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**百分位数排名**：在分布中小于或等于给定数量的值的百分比。'
- en: '**percentile**: The value in a distribution associated with a given percentile
    rank.'
  id: totrans-237
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**百分位数**：与给定百分位数排名相关联的分布中的值。'
- en: '**cumulative distribution function (CDF)**: A function that maps a value to
    the proportion of the distribution less than or equal to that value.'
  id: totrans-238
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**累积分布函数（CDF）**：一个将值映射到小于或等于该值的分布比例的函数。'
- en: '**quantile**: The value in a distribution that is greater than or equal to
    a given proportion of values.'
  id: totrans-239
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分位数**：在分布中大于或等于给定比例的值的值。'
- en: '**robust**: A statistic is robust if it is less affected by extreme values
    or outliers.'
  id: totrans-240
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**稳健**：如果一个统计量受极端值或异常值的影响较小，则称其为稳健。'
- en: '**interquartile range (IQR)**: The difference between the 75th and 25th percentiles,
    used to measure the spread of a distribution.'
  id: totrans-241
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**四分位距（IQR）**：第75百分位数和第25百分位数之间的差值，用于衡量分布的离散程度。'
- en: Exercises
  id: totrans-242
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 练习
- en: Exercise 4.1
  id: totrans-243
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习4.1
- en: How much did you weigh at birth? If you don’t know, call your mother or someone
    else who knows. And if no one knows, you can use my birth weight, 8.5 pounds,
    for this exercise.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 你出生时体重是多少？如果你不知道，打电话给你的母亲或其他人。如果没有人知道，你可以使用我的出生体重，8.5磅，来进行这个练习。
- en: Using the NSFG data (all live births), compute the distribution of birth weights
    and use it to find your percentile rank. If you were a first baby, find your percentile
    rank in the distribution for first babies. Otherwise use the distribution for
    others. If you are in the 90th percentile or higher, call your mother back and
    apologize.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 NSFG 数据（所有活产婴儿），计算出生体重的分布，并使用它来找到你的百分位数排名。如果你是第一个孩子，找到第一个孩子分布中的百分位数排名。否则使用其他人的分布。如果你在
    90 个百分位数或更高，给你的母亲打个电话道歉。
- en: '[PRE88]'
  id: totrans-246
  prefs: []
  type: TYPE_PRE
  zh: '[PRE88]'
- en: Exercise 4.2
  id: totrans-247
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习 4.2
- en: For live births in the NSFG dataset, the column `babysex` indicates whether
    the baby was male or female. We can use `query` to select the rows for male and
    female babies.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 在 NSFG 数据集中，对于活产婴儿，`babysex` 列表示婴儿是男性还是女性。我们可以使用 `query` 来选择男性和女性婴儿的行。
- en: '[PRE89]'
  id: totrans-249
  prefs: []
  type: TYPE_PRE
  zh: '[PRE89]'
- en: '[PRE90]'
  id: totrans-250
  prefs: []
  type: TYPE_PRE
  zh: '[PRE90]'
- en: Make `Cdf` objects that represent the distribution of birth weights for male
    and female babies. Plot the two CDFs. What are the differences in the shape and
    location of the distributions?
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 创建代表男性和女性婴儿出生体重分布的 `Cdf` 对象。绘制这两个 CDF。这两个分布的形状和位置有什么不同？
- en: If a male baby weighs 8.5 pounds, what is his percentile rank? What is the weight
    of a female baby with the same percentile rank?
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一个男婴体重为 8.5 磅，他的百分位数排名是多少？具有相同百分位数排名的女婴体重是多少？
- en: Exercise 4.3
  id: totrans-253
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习 4.3
- en: From the NSFG dataset pregnancy data, select the `agepreg` column and make a
    `Cdf` to represent the distribution of age at conception for each pregnancy. Use
    the CDF to compute the percentage of ages less than or equal to 20, and the percentage
    less than or equal to 30. Use those results to compute the percentage between
    20 and 30.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 从 NSFG 数据集的怀孕数据中，选择 `agepreg` 列，创建一个 `Cdf` 来表示每次怀孕的怀孕年龄分布。使用 CDF 来计算年龄小于或等于
    20 岁的百分比，以及年龄小于或等于 30 岁的百分比。使用这些结果来计算 20 到 30 岁之间的百分比。
- en: '[PRE91]'
  id: totrans-255
  prefs: []
  type: TYPE_PRE
  zh: '[PRE91]'
- en: Exercise 4.4
  id: totrans-256
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习 4.4
- en: Here are the running speeds of the people who finished the James Joyce Ramble,
    described earlier in this chapter.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是之前在本章中提到的詹姆斯·乔伊斯漫步完成者的跑步速度。
- en: '[PRE92]'
  id: totrans-258
  prefs: []
  type: TYPE_PRE
  zh: '[PRE92]'
- en: Make a `Cdf` that represents the distribution of these speeds, and use it to
    compute the median, IQR, and quartile skewness. Does the distribution skew to
    the left or right?
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个代表这些速度分布的 `Cdf`，并使用它来计算中位数、四分位数范围和四分位数偏斜。分布是向左还是向右偏斜？
- en: Exercise 4.5
  id: totrans-260
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 练习 4.5
- en: The numbers generated by `np.random.random` are supposed to be uniform between
    0 and 1, which means that the CDF of a sample should be a straight line. Let’s
    see if that’s true. Here’s a sample of 1001 numbers. Plot the CDF of this sample.
    Does it look like a straight line?
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: '`np.random.random` 生成的数字应该在 0 和 1 之间是均匀的，这意味着样本的 CDF 应该是一条直线。让我们看看这是否正确。这里有一个
    1001 个数字的样本。绘制这个样本的 CDF。它看起来像一条直线吗？'
- en: '[PRE93]'
  id: totrans-262
  prefs: []
  type: TYPE_PRE
  zh: '[PRE93]'
- en: '[Think Stats: Exploratory Data Analysis in Python, 3rd Edition](https://allendowney.github.io/ThinkStats/index.html)'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: '[Think Stats: 使用 Python 进行探索性数据分析，第 3 版](https://allendowney.github.io/ThinkStats/index.html)'
- en: Copyright 2024 [Allen B. Downey](https://allendowney.com)
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 版权 2024 [艾伦·B·唐尼](https://allendowney.com)
- en: 'Code license: [MIT License](https://mit-license.org/)'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 代码许可：[MIT 许可证](https://mit-license.org/)
- en: 'Text license: [Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International](https://creativecommons.org/licenses/by-nc-sa/4.0/)'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 文本许可：[Creative Commons 知识共享署名-非商业性使用-相同方式共享 4.0 国际](https://creativecommons.org/licenses/by-nc-sa/4.0/)
