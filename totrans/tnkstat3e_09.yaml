- en: Relationships between variables
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://allendowney.github.io/ThinkStats/chap07.html](https://allendowney.github.io/ThinkStats/chap07.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'So far we have only looked at one variable at a time. In this chapter we start
    looking at relationships between variables. Two variables are related if knowing
    one gives you information about the other. For example, height and weight are
    related – people who are taller tend to be heavier. Of course, it is not a perfect
    relationship: there are short heavy people and tall light ones. But if you are
    trying to guess someone’s weight, you will be more accurate if you know their
    height than if you don’t.'
  prefs: []
  type: TYPE_NORMAL
- en: This chapter presents several ways to visualize relationships between variables,
    and one way to quantify the strength of a relationship, correlation.
  prefs: []
  type: TYPE_NORMAL
- en: '[Click here to run this notebook on Colab](https://colab.research.google.com/github/AllenDowney/ThinkStats/blob/v3/nb/chap07.ipynb).'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Scatter Plots
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If you meet someone who is unusually good at math, do you expect their verbal
    skills to be better or worse than average? On one hand, you might imagine that
    people specialize in one area or the other, so someone who excels at one might
    be less good at the other. On the other hand, you might expect someone who is
    generally smart to be above average in both areas. Let’s find out which it is.
  prefs: []
  type: TYPE_NORMAL
- en: We’ll use data from the National Longitudinal Survey of Youth 1997 (NLSY97),
    which “follows the lives of a sample of 8,984 American youth born between 1980-84”.
    The public data set includes the participants’ scores on several standardized
    tests, including the tests most often used in college admissions, the SAT and
    ACT. Because test-takers get separate scores for the math and verbal sections,
    we can use this data to explore the relationship between mathematical and verbal
    ability.
  prefs: []
  type: TYPE_NORMAL
- en: I used the NLS Investigator to create an excerpt that contains the variables
    I’ll use for this analysis. With their permission, I can redistribute this excerpt.
    Instructions for downloading the data are in the notebook for this chapter.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: We can use `read_csv` to read the data and `replace` to replace the special
    codes for missing data with `np.nan`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '|  | R0000100 | R0490200 | R0536300 | R0536401 | R0536402 | R1235800 | R1318200
    | R1482600 | R3961900 | R3989200 | ... | R9872200 | R9872300 | R9872400 | S1552700
    | U0008900 | U1845500 | U3444000 | U4949700 | Z9083800 | Z9083900 |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---
    | --- | --- | --- | --- | --- | --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| 0 | 1 | NaN | 2 | 9 | 1981 | 1 | NaN | 4 | NaN | NaN | ... | 293.0 | 250.0
    | 333.0 | NaN | 120000.0 | NaN | NaN | NaN | 16.0 | 4.0 |'
  prefs: []
  type: TYPE_TB
- en: '| 1 | 2 | NaN | 1 | 7 | 1982 | 1 | 145.0 | 2 | NaN | NaN | ... | 114.0 | 230.0
    | 143.0 | NaN | 98928.0 | 116000.0 | 188857.0 | 180000.0 | 14.0 | 2.0 |'
  prefs: []
  type: TYPE_TB
- en: '| 2 | 3 | NaN | 2 | 9 | 1983 | 1 | 82.0 | 2 | NaN | NaN | ... | NaN | NaN |
    NaN | NaN | NaN | NaN | NaN | 75000.0 | 16.0 | 4.0 |'
  prefs: []
  type: TYPE_TB
- en: '| 3 | 4 | NaN | 2 | 2 | 1981 | 1 | NaN | 2 | NaN | NaN | ... | 195.0 | 230.0
    | 216.0 | NaN | 85000.0 | 45000.0 | NaN | NaN | 13.0 | 2.0 |'
  prefs: []
  type: TYPE_TB
- en: '| 4 | 5 | NaN | 1 | 10 | 1982 | 1 | NaN | 2 | NaN | NaN | ... | 293.0 | 230.0
    | 231.0 | NaN | 210000.0 | 212000.0 | NaN | 240000.0 | 12.0 | 2.0 |'
  prefs: []
  type: TYPE_TB
- en: 5 rows × 34 columns
  prefs: []
  type: TYPE_NORMAL
- en: The `DataFrame` contains one row for each of the 8984 participants in the survey
    and one column for each of the 34 variables I selected. The column names don’t
    mean much by themselves, so let’s replace the ones we’ll use with more interpretable
    names.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Both columns contain a few values less than 200, which is not possible because
    200 is the lowest score, so we’ll replace them with `np.nan`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: Next we’ll use `dropna` to select only rows where both scores are valid.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: SAT scores are standardized so the mean is 500 and the standard deviation is
    100. In the NLSY sample, the means and standard deviations are close to these
    values.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: Now, to see whether there is a relationship between these variables, let’s look
    at a **scatter plot**.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: '![_images/ef1385f245677b407128ed90209b900187aa895b3c352a5f8a8b04c4900e38f1.png](../Images/3ccc00b02f0bbeea55013d8ade32e79a.png)'
  prefs: []
  type: TYPE_IMG
- en: Using the default options of the `scatter` function, we can see the general
    shape of the relationship. People who do well on one section of the test tend
    to do better on the other, too.
  prefs: []
  type: TYPE_NORMAL
- en: However, this version of the figure is **overplotted**, which means there are
    a lot of overlapping points, which can create a misleading impression of the relationship.
    The center, where the density of points is highest, is not as dark as it should
    be – by comparison, the extreme values are darker than they should be. Overplotting
    tends to give too much visual weight to outliers.
  prefs: []
  type: TYPE_NORMAL
- en: We can improve the plot by reducing the size of the markers so they overlap
    less.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: '![_images/231904025778f56e47c42d3dd4f26b31aed27a0ffb2244a96028ed6f330f2d22.png](../Images/93edbe951a5dd99862eb09a1589c9b96.png)'
  prefs: []
  type: TYPE_IMG
- en: Now we can see that the markers are aligned in rows and columns, because scores
    are rounded off to the nearest multiple of 10. Some information is lost in the
    process.
  prefs: []
  type: TYPE_NORMAL
- en: We can’t get that information back, but we can minimize the effect on the scatter
    plot by **jittering** the data, which means adding random noise to reverse the
    effect of rounding off. The following function takes a sequence and jitters it
    by adding random values from a normal distribution with mean 0 and the given standard
    deviation. The result is a NumPy array.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: If we jitter the scores with a standard deviation of 3, the rows and columns
    are no longer visible in the scatter plot.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: '![_images/d9e7248487064f569ef286338bf94c0f34c614f42d6cc7b985f34d49fe39bda4.png](../Images/50ad77c6e70dc8a531b6f2ab25919dbf.png)'
  prefs: []
  type: TYPE_IMG
- en: Jittering reduces the visual effect of rounding and makes the shape of the relationship
    clearer. But in general you should only jitter data for purposes of visualization
    and avoid using jittered data for analysis.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this example, even after adjusting the marker size and jittering the data,
    there is still some overplotting. So let’s try one more thing: we can use the
    `alpha` keyword to make the markers partly transparent.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: '![_images/a23074a61eca6e0a17b738fd292febb854d6267d8e87b1e352fe7b04c7964706.png](../Images/a3e31cd763e117bd799ae8e2da1f54ee.png)'
  prefs: []
  type: TYPE_IMG
- en: With transparency, overlapping data points look darker, so darkness is proportional
    to density.
  prefs: []
  type: TYPE_NORMAL
- en: Although scatter plots are a simple and widely-used visualization, they can
    be hard to get right. In general, it takes some trial and error to adjust marker
    sizes, transparency, and jittering to find the best visual representation of the
    relationship between variables.
  prefs: []
  type: TYPE_NORMAL
- en: Decile Plots
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Scatter plots provide a general impression of the relationship between variables,
    but there are other visualizations that provide more insight into the nature of
    the relationship. One of them is a **decile plot**.
  prefs: []
  type: TYPE_NORMAL
- en: To generate a decile plot, we’ll sort the respondents by verbal score and divide
    them into 10 groups, called **deciles**. We can use the `qcut` method to compute
    the deciles.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: The number of respondents in each decile is roughly equal.
  prefs: []
  type: TYPE_NORMAL
- en: Now we can use the `groupby` method to divide the `DataFrame` into groups by
    `decile`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: The result is a `DataFrameGroupBy` object that represents the groups. We can
    select the `sat_math` column from it.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: The result is a `SeriesGroupBy` object that represents the math scores in each
    decile. We can use the `quantile` function to compute the 10th, 50th, and 90th
    percentiles in each group.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: A decile plot shows these percentiles for each decile group. In the following
    figure, the line shows the median and the shaded region shows the area between
    the 10th and 90th percentiles.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: '![_images/a2062d6590d24fcfd8a73e72aba32540fc72c179020548106dfa437cce05b5b8.png](../Images/83c6d65625ec4e99a45bdc9e4bde8155.png)'
  prefs: []
  type: TYPE_IMG
- en: As an alternative, we can compute the median verbal score in each group and
    plot those values on the x-axis, rather than the decile numbers.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: '![_images/b30c80a443c531ef5f2ed5eb95bceb4d274b779bf865a8a551b50c00c8f8fce9.png](../Images/b5bb1f2d7430fd6db524fb36ee9e6acf.png)'
  prefs: []
  type: TYPE_IMG
- en: It looks like the relationship between these variables is linear – that is,
    each increase in the median verbal scores corresponds to a roughly equal increase
    in median math scores.
  prefs: []
  type: TYPE_NORMAL
- en: More generally, we could divide the respondents into any number of groups, not
    necessarily 10, and we could compute other summary statistics in each group, not
    just these percentiles.
  prefs: []
  type: TYPE_NORMAL
- en: Correlation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: When the NLSY participants were in 9th grade, many of them took the mathematics
    section of the Peabody Individual Achievement Test (PIAT). Let’s give the column
    that contains the results a more interpretable name.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: Here’s what the distribution of scores looks like.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: '![_images/631d4ff9822361b3089ee462030515ae7ca0f90f925b824b7510b579cc08126b.png](../Images/532175927cd81b65d2d498402ece6b1e.png)'
  prefs: []
  type: TYPE_IMG
- en: Students who do well on the PIAT in 9th grade are likely to do well on the SAT
    math section in 12th grade. For the NLSY participants who took both tests, the
    following scatter plot shows the relationship between their scores. It uses the
    `scatter` function in `thinkstats`, which adjusts the marker size and transparency,
    and optionally jitters the data.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: '![_images/533f7031f7114cf3687097765e38b823adfbc13c468104b88ad3fe9f77f94aa0.png](../Images/2fb31340e87308c214ac5400a008725a.png)'
  prefs: []
  type: TYPE_IMG
- en: As expected, students who do well on the PIAT are likely to do well on the SAT
    math. And if math and verbal ability are related, we expect them do well on the
    SAT verbal section, too. The following figure shows the relationship between the
    PIAT and SAT verbal scores.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
- en: '![_images/105c53d7f220ad9299ec9d4f70f827901d26e4221b7973f57ff2aa1b949a15d3.png](../Images/5dd81b81889c745d6c2ef431d825004e.png)'
  prefs: []
  type: TYPE_IMG
- en: Students with higher PIAT scores also have higher SAT verbal scores, on average.
  prefs: []
  type: TYPE_NORMAL
- en: Comparing the scatter plots, the points in the first figure might be more compact,
    and the points in the second figure more dispersed. If so, that means that the
    PIAT math scores predict SAT math scores more accurately than they predict SAT
    verbal scores – and it makes sense if they do.
  prefs: []
  type: TYPE_NORMAL
- en: To quantify the strength of these relationships, we can use the **Pearson correlation
    coefficient**, often just called “correlation”. To understand correlation, let’s
    start with standardization.
  prefs: []
  type: TYPE_NORMAL
- en: To standardize a variable, we subtract off the mean and divide through by the
    standard deviation, as in this function.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]'
  prefs: []
  type: TYPE_PRE
- en: To show how it’s used, we’ll select the rows where `piat_math` and `sat_math`
    are valid.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE36]'
  prefs: []
  type: TYPE_PRE
- en: And standardize the PIAT math scores.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE37]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE38]'
  prefs: []
  type: TYPE_PRE
- en: The results are **standard scores**, also called “z-scores”. Because of the
    way the standard scores are calculated, the mean is close to 0 and the standard
    deviation is close to 1.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s also standardize the SAT math scores.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE39]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE40]'
  prefs: []
  type: TYPE_PRE
- en: The following figure shows sequences of these scores for the first 100 participants.
  prefs: []
  type: TYPE_NORMAL
- en: Calling `subplot` with the arguments `2, 1, 1` tells Matplotlib to create multiple
    plots, arranged in two rows and one column, and initializes the first plot. Calling
    it again with the arguments `2, 1, 2` initializes the second plot. `axhline` draws
    a horizontal line that spans the width of the axes.
  prefs: []
  type: TYPE_NORMAL
- en: '![_images/abc24500398e51254ba3bd4404632ce6f187115628e6ec2416ba43d4cf9a2cdf.png](../Images/639c9bb6235d1e84f89ed8bdb37c0a9c.png)'
  prefs: []
  type: TYPE_IMG
- en: 'These variables are clearly related: when one is above the mean, the other
    is likely to be above the mean, too. To quantify the strength of this relationship,
    we’ll multiply the standard scores element-wise and compute the average of the
    products.'
  prefs: []
  type: TYPE_NORMAL
- en: When both scores are positive, their product is positive, so it tends to increase
    the average product. And when both scores are negative, their product is positive,
    so it also tends to increase the average product. When the scores have opposite
    signs, the product is negative, so it decreases the average product. As a result,
    the average product measures the similarity between the sequences.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE41]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE42]'
  prefs: []
  type: TYPE_PRE
- en: 'The result, which is about 0.64, is the correlation coefficient. Here’s one
    way to interpret it: if someone’s PIAT math score is 1 standard deviation above
    the mean, we expect their SAT math score to be 0.64 standard deviations above
    the mean, on average.'
  prefs: []
  type: TYPE_NORMAL
- en: The result is the same if we multiply the elements in the other order.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE43]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE44]'
  prefs: []
  type: TYPE_PRE
- en: 'So the correlation coefficient is symmetric: if someone’s SAT math score is
    1 standard deviation above the mean, we expect their PIAT math score to be 0.64
    standard deviations above the mean, on average.'
  prefs: []
  type: TYPE_NORMAL
- en: Correlation is a commonly-used statistic, so NumPy provides a function that
    computes it.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE45]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE46]'
  prefs: []
  type: TYPE_PRE
- en: The result is a **correlation matrix**, with one row and one column for each
    variable. The value in the upper left is the correlation of `piat_math` with itself.
    The value in the lower right is the correlation of `sat_math` with itself. The
    correlation of any variable with itself is 1, which indicates perfect correlation.
  prefs: []
  type: TYPE_NORMAL
- en: The values in the upper right and lower left are the correlation of `piat_math`
    with `sat_math` and the correlation of `sat_math` with `piat_math`, which are
    necessarily equal.
  prefs: []
  type: TYPE_NORMAL
- en: '`thinkstats` provides a `corrcoef` function that takes a `DataFrame` and two
    column names, selects the rows where both columns are valid, and computes their
    correlation.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE47]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE48]'
  prefs: []
  type: TYPE_PRE
- en: We can use this function to compute the correlation of `piat_math` and `sat_verbal`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE49]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE50]'
  prefs: []
  type: TYPE_PRE
- en: The correlation is about 0.51, so if someone’s PIAT math score is one standard
    deviation above the mean, we expect their SAT verbal score to be 0.51 standard
    deviations above the mean, on average.
  prefs: []
  type: TYPE_NORMAL
- en: As we might expect, PIAT math scores predict SAT math scores better than they
    predict SAT verbal scores.
  prefs: []
  type: TYPE_NORMAL
- en: Strength of Correlation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: As you look at more scatter plots, you will get a sense of what different correlations
    look like. To help you develop this sense, the following figure shows scatter
    plots for randomly-generated data with the different correlations.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE51]'
  prefs: []
  type: TYPE_PRE
- en: '![_images/e7ee5372b41d12d05a35f4998779ee5d22318be735c0f5529c0a7e2c817d7941.png](../Images/5eba3559ca143f76fbf6a8cbf462a57e.png)'
  prefs: []
  type: TYPE_IMG
- en: The Greek letter ρ, which is spelled “rho” and pronounced like “row”, is the
    conventional symbol for the correlation coefficient.
  prefs: []
  type: TYPE_NORMAL
- en: Correlation can also be negative. Here are scatter plots for random data with
    a range of negative correlations.
  prefs: []
  type: TYPE_NORMAL
- en: '![_images/41b0421758b6d666fc04fcd58b81662b8b51decc444db8f50062e6206da78084.png](../Images/7cb4ea024a3acfd6bd9d1c040529d2bb.png)'
  prefs: []
  type: TYPE_IMG
- en: The correlation coefficient is always between -1 and 1. If there is no relationship
    between two variables, their correlation is 0 – but if the correlation is 0, that
    doesn’t necessarily mean there is no relationship.
  prefs: []
  type: TYPE_NORMAL
- en: In particular, if there is a non-linear relationship, the correlation coefficient
    can be close to 0. In each of the following examples, there is a clear relationship
    between the variables in the sense that if we are given one of the values, we
    can make a substantially better prediction of the other. But in each case the
    correlation coefficient is close to 0.
  prefs: []
  type: TYPE_NORMAL
- en: '![_images/8c360130f804b33bde85aab4a66bcd54a743597f6952a770a2cc499cda680917.png](../Images/7812e5c1870cf8b795a6a779aedc8c57.png)'
  prefs: []
  type: TYPE_IMG
- en: Correlation quantifies the strength of a *linear* relationship between variables.
    If there is a non-linear relationship, the correlation coefficient can be misleading.
    And if the correlation is close to 0, that does *not* mean there is no relationship.
  prefs: []
  type: TYPE_NORMAL
- en: Rank Correlation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The NLSY is longitudinal, which means that it follows the same group of people
    over time. The group we’ve been studying includes people born between 1980 and
    1984. The ones who took the SAT probably took it in the late 1990s, when they
    were about 18 years old. So when they were asked about their income in 2021, they
    were in their late 30s or early 40s. Let’s give the column with the income data
    a more interpretable name.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE52]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE53]'
  prefs: []
  type: TYPE_PRE
- en: The values in this column are gross family income, which is total income of
    the respondent and the other members of their household, from all sources, reported
    in U.S. dollars (USD). Here’s what the distribution of income looks like.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE54]'
  prefs: []
  type: TYPE_PRE
- en: '![_images/e574935346302b25c4d4344bb42a5340d9ddc26ccf4f83843b07178ee2943e46.png](../Images/eb2959ca77bd32095f605021b52069ff.png)'
  prefs: []
  type: TYPE_IMG
- en: Notice the step near $600,000 – values above this threshold were capped to protect
    the anonymity of the participants. Now here’s a scatter plot of the respondents’
    SAT math scores and their income later in life.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE55]'
  prefs: []
  type: TYPE_PRE
- en: '![_images/2844d42f574e4808f6185343a8621fe066e72ec36324f39ca6f521c2468cd168.png](../Images/aaf83830d54a7732403e0ff4f6f0b3fa.png)'
  prefs: []
  type: TYPE_IMG
- en: It looks like there is a relationship between these variables. Here is the correlation.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE56]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE57]'
  prefs: []
  type: TYPE_PRE
- en: The correlation is about 0.3, which means that if someone gets a PIAT math score
    one standard deviation above the mean when they are 15 years old, we expect their
    income to be about 0.3 standard deviations above the mean when they are 40. That’s
    not as strong as the correlation between PIAT scores and SAT scores, but considering
    the number of factors that affect income, it’s pretty strong.
  prefs: []
  type: TYPE_NORMAL
- en: In fact, Pearson’s correlation coefficient might understate the strength of
    the relationship. As we can see in the previous scatter plot, both variables have
    an apparent excess of values at the extremes. Because the correlation coefficient
    is based on the product of deviations from the mean, it is sensitive to these
    extreme values.
  prefs: []
  type: TYPE_NORMAL
- en: A more robust alternative is the **rank correlation**, which is based on the
    ranks of the scores rather than standardized scores. We can use the Pandas method
    `rank` to compute the rank of each score and each income.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE58]'
  prefs: []
  type: TYPE_PRE
- en: With the `method="first"` argument, `rank` assigns ranks from 1 to the length
    of the sequence, which is 4101.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE59]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE60]'
  prefs: []
  type: TYPE_PRE
- en: Here’s a scatter plot of income ranks versus math score ranks.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE61]'
  prefs: []
  type: TYPE_PRE
- en: '![_images/e69af4f34d79a816fdd005f3cfdc37d58ecea6356ed7e32c36ca4c403613b12c.png](../Images/8518a6bff7b3bc49b1a3ffbe4917168e.png)'
  prefs: []
  type: TYPE_IMG
- en: And here’s the correlation of the ranks.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE62]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE63]'
  prefs: []
  type: TYPE_PRE
- en: The result is about 0.38, somewhat higher than the Pearson correlation, which
    is 0.30. Because rank correlation is less sensitive to the effect of extreme values,
    it is probably a better measure of the strength of the relationship between these
    variables.
  prefs: []
  type: TYPE_NORMAL
- en: '`thinkplot` provides a `rankcorr` function that encapsulates the code in this
    section.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE64]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE65]'
  prefs: []
  type: TYPE_PRE
- en: And SciPy provides a similar function called `spearmanr`, because rank correlation
    is also called Spearman’s correlation.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE66]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE67]'
  prefs: []
  type: TYPE_PRE
- en: As an exercise, you’ll have a chance to compute the correlation between SAT
    verbal scores and income, using both Pearson correlation and rank correlation.
  prefs: []
  type: TYPE_NORMAL
- en: Correlation and Causation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If variables A and B are correlated, the apparent correlation might be due to
    random sampling, or it might be the result of non-representative sampling, or
    it might indicate a real correlation between quantities in the population.
  prefs: []
  type: TYPE_NORMAL
- en: 'If the correlation is real, there are three possible explanations: A causes
    B, or B causes A, or some other set of factors causes both A and B. These explanations
    are called “causal relationships”.'
  prefs: []
  type: TYPE_NORMAL
- en: Correlation alone does not distinguish between these explanations, so it does
    not tell you which ones are true. This rule is often summarized with the phrase
    “Correlation does not imply causation,” which is so pithy it has its own Wikipedia
    page.
  prefs: []
  type: TYPE_NORMAL
- en: '[http://wikipedia.org/wiki/Correlation_does_not_imply_causation](http://wikipedia.org/wiki/Correlation_does_not_imply_causation)'
  prefs: []
  type: TYPE_NORMAL
- en: So what can you do to provide evidence of causation?
  prefs: []
  type: TYPE_NORMAL
- en: Use time. If A comes before B, then A can cause B but not the other way around.
    The order of events can help us infer the direction of causation, but it does
    not preclude the possibility that something else causes both A and B.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Use randomness. If you divide a large sample into two groups at random and compute
    the means of almost any variable, you expect the difference to be small. If the
    groups are nearly identical in all variables but A and B, you can rule out the
    possibility that something else causes both A and B.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'These ideas are the motivation for the **randomized controlled trial**, in
    which subjects are assigned randomly to two (or more) groups: a **treatment group**
    that receives some kind of intervention, like a new medicine, and a **control
    group** that receives no intervention, or another treatment whose effects are
    known. A randomized controlled trial is the most reliable way to demonstrate a
    causal relationship, and the foundation of evidence-based medicine.'
  prefs: []
  type: TYPE_NORMAL
- en: Unfortunately, controlled trials are sometimes impossible or unethical. An alternative
    is to look for a **natural experiment**, where similar groups are exposed to different
    conditions due to circumstances beyond the control of the experimenter.
  prefs: []
  type: TYPE_NORMAL
- en: Identifying and measuring causal relationships is the topic of a branch of statistics
    called **causal inference**.
  prefs: []
  type: TYPE_NORMAL
- en: Glossary
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**scatter plot**: A visualization that shows the relationship between two variables
    by plotting one point for each observation in the dataset.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**overplotted:** A scatter plot is overplotted if many markers overlap, making
    it hard to distinguish areas of different density, which can misrepresent the
    relationship.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**jitter**: Random noise added to data points in a plot to make overlapping
    values more visible.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**decile plot:** A plot that divides data into deciles (ten groups) based on
    one variable, then summarizes another variable for each group.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**decile:** One of the groups created by sorting data and dividing it into
    ten roughly equal parts.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Pearson correlation coefficient:** A statistic that measures the strength
    and sign (positive or negative) of the linear relationship between two variables.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**standard score**: A quantity that has been standardized so that it is expressed
    in standard deviations from the mean.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**correlation matrix:** A table showing the correlation coefficients for each
    pair of variables in a dataset.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**rank correlation**: A robust way to quantify the strength of a relationship
    by using the ranks of values instead of the actual values.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**randomized controlled trial**: An experiment where subjects are randomly
    assigned to groups that receive different treatments.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**treatment group**: In an experiment, the group that receives the intervention
    being tested.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**control group**: In an experiment, the group that does not receive the intervention,
    or receives a treatment whose effect is known.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**natural experiment**: An experiment that uses naturally occurring groups,
    which can sometimes mimic random assignment.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**causal inference:** Methods for identifying and quantifying cause-and-effect
    relationships.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Exercises
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Exercise 7.1
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `thinkstats` module provides a function called `decile_plot` that encapsulates
    the code from earlier in this chapter. We can call it like this to visualize the
    relationship between SAT verbal and math scores.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE68]'
  prefs: []
  type: TYPE_PRE
- en: '![_images/b30c80a443c531ef5f2ed5eb95bceb4d274b779bf865a8a551b50c00c8f8fce9.png](../Images/b5bb1f2d7430fd6db524fb36ee9e6acf.png)'
  prefs: []
  type: TYPE_IMG
- en: Make a decile plot of PIAT math scores and income. Does it appear to be a linear
    relationship?
  prefs: []
  type: TYPE_NORMAL
- en: Exercise 7.2
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Make a scatter plot of income versus SAT math scores. Compute Pearson’s correlation
    and rank correlation. Are they substantially different?
  prefs: []
  type: TYPE_NORMAL
- en: Make a scatter plot of income versus SAT verbal scores, and compute both correlations.
    Which is a stronger prediction of future income, math or verbal scores?
  prefs: []
  type: TYPE_NORMAL
- en: Exercise 7.3
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Let’s see how a student’s high school grade point average (GPA) is correlated
    with their SAT scores. Here’s the variable in the NLSY dataset that encodes GPA.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE69]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE70]'
  prefs: []
  type: TYPE_PRE
- en: And here’s what the distribution of GPAs looks like.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE71]'
  prefs: []
  type: TYPE_PRE
- en: '![_images/10ee1880583686152f330ca89da0a2f8f8eb3e8335dedcc4a0e739031d0f56bb.png](../Images/1c39f45be7fab9f419caa2512f70dcba.png)'
  prefs: []
  type: TYPE_IMG
- en: Make a scatter plot that shows the relationship between GPA and SAT math scores
    and compute the correlation coefficient. Do the same for the relationship between
    GPA and SAT verbal scores. Which SAT score is a better predictor of GPA?
  prefs: []
  type: TYPE_NORMAL
- en: Exercise 7.4
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Let’s investigate the relationship between education and income. The NLSY dataset
    includes a column that reports the highest degree earned by each respondent. The
    values are encoded as integers.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE72]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE73]'
  prefs: []
  type: TYPE_PRE
- en: But we can use these lists to decode them.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE74]'
  prefs: []
  type: TYPE_PRE
- en: And make a `Pmf` that represents the distribution of educational attainment.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE75]'
  prefs: []
  type: TYPE_PRE
- en: '![_images/f2adc1546180aa4400110a2d53874b37868ccdd820600b090edb960346f0e8b1.png](../Images/2d779d953e6cd1e18a04c787c604a934.png)'
  prefs: []
  type: TYPE_IMG
- en: Make a scatter plot of `income` versus `degree`. To avoid overplotting, jitter
    the values of `degree` and adjust the marker size and transparency.
  prefs: []
  type: TYPE_NORMAL
- en: Use the `groupby` method to group respondents by `degree`. From the `DataFrameGroupBy`
    object, select the `income` column; then use the `quantile` method to compute
    the median, 10th and 90th percentiles in each group. Use `fill_between` to plot
    the region between the 10th and 90th percentiles, and use `plot` to plot the medians.
  prefs: []
  type: TYPE_NORMAL
- en: What can you say about the income premium associated with each additional degree?
  prefs: []
  type: TYPE_NORMAL
- en: Exercise 7.4
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The Behavioral Risk Factor Surveillance System (BRFSS) dataset includes self-reported
    heights and weights for about 400,000 respondents. Instructions for downloading
    the data are in the notebook for this chapter.
  prefs: []
  type: TYPE_NORMAL
- en: Make a scatter plot that shows the relationship between height and weight. You
    might have to jitter the data to blur the visible rows and columns due to rounding.
    And with such a large sample, you will have to adjust the marker size and transparency
    to avoid overplotting. Also, because there are outliers in both measurements,
    you might want to use `xlim` and `ylim` to zoom in on a region that covers most
    of the respondents.
  prefs: []
  type: TYPE_NORMAL
- en: Here’s how we can load the data.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE76]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE77]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE78]'
  prefs: []
  type: TYPE_PRE
- en: Make a decile plot of weight versus height. Does the relationship seem to be
    linear? Compute the correlation coefficient and rank correlation. Are they substantially
    different? Which one do you think better quantifies the relationship between these
    variables?
  prefs: []
  type: TYPE_NORMAL
- en: '[Think Stats: Exploratory Data Analysis in Python, 3rd Edition](https://allendowney.github.io/ThinkStats/index.html)'
  prefs: []
  type: TYPE_NORMAL
- en: Copyright 2024 [Allen B. Downey](https://allendowney.com)
  prefs: []
  type: TYPE_NORMAL
- en: 'Code license: [MIT License](https://mit-license.org/)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Text license: [Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International](https://creativecommons.org/licenses/by-nc-sa/4.0/)'
  prefs: []
  type: TYPE_NORMAL
