- en: Exploratory Data Analysis
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://allendowney.github.io/ThinkStats/chap01.html](https://allendowney.github.io/ThinkStats/chap01.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: The thesis of this book is we can use data to answer questions, resolve debates,
    and make better decisions.
  prefs: []
  type: TYPE_NORMAL
- en: 'This chapter introduces the steps we’ll use to do that: loading and validating
    data, exploring, and choosing statistics that measure what we are interested in.
    As an example, we’ll use data from the National Survey of Family Growth (NSFG)
    to answer a question I heard when my wife and I were expecting our first child:
    do first babies tend to arrive late?'
  prefs: []
  type: TYPE_NORMAL
- en: '[Click here to run this notebook on Colab](https://colab.research.google.com/github/AllenDowney/ThinkStats/blob/v3/nb/chap01.ipynb).'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Evidence
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'You might have heard that first babies are more likely to be late. If you search
    the web with this question, you will find plenty of discussion. Some people claim
    it’s true, others say it’s a myth, and some people say it’s the other way around:
    first babies come early.'
  prefs: []
  type: TYPE_NORMAL
- en: 'In many of these discussions, people provide data to support their claims.
    I found many examples like these:'
  prefs: []
  type: TYPE_NORMAL
- en: “My two friends that have given birth recently to their first babies, BOTH went
    almost 2 weeks overdue before going into labour or being induced.”
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: “My first one came 2 weeks late and now I think the second one is going to come
    out two weeks early!!”
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: “I don’t think that can be true because my sister was my mother’s first and
    she was early, as with many of my cousins.”
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Reports like these are called **anecdotal evidence** because they are based
    on data that is unpublished and usually personal. In casual conversation, there
    is nothing wrong with anecdotes, so I don’t mean to pick on the people I quoted.
  prefs: []
  type: TYPE_NORMAL
- en: 'But we might want evidence that is more persuasive and an answer that is more
    reliable. By those standards, anecdotal evidence usually fails, because:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Small number of observations: If pregnancy length is longer for first babies,
    the difference is probably small compared to natural variation. In that case,
    we might have to compare a large number of pregnancies to know whether there is
    a difference.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Selection bias: People who join a discussion of this question might be interested
    because their first babies were late. In that case the process of selecting data
    would bias the results.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Confirmation bias: People who believe the claim might be more likely to contribute
    examples that confirm it. People who doubt the claim are more likely to cite counterexamples.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Inaccuracy: Anecdotes are often personal stories, and might be misremembered,
    misrepresented, repeated inaccurately, etc.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'To address the limitations of anecdotes, we will use the tools of statistics,
    which include:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Data collection: We will use data from a large national survey that was designed
    explicitly with the goal of generating statistically valid inferences about the
    U.S. population.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Descriptive statistics: We will generate statistics that summarize the data
    concisely, and evaluate different ways to visualize data.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Exploratory data analysis: We will look for patterns, differences, and other
    features that address the questions we are interested in. At the same time we
    will check for inconsistencies and identify limitations.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Estimation: We will use data from a sample to estimate characteristics of the
    general population.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Hypothesis testing: Where we see apparent effects, like a difference between
    two groups, we will evaluate whether the effect might have happened by chance.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: By performing these steps with care to avoid pitfalls, we can reach conclusions
    that are more justified and more likely to be correct.
  prefs: []
  type: TYPE_NORMAL
- en: '## The National Survey of Family Growth'
  prefs: []
  type: TYPE_NORMAL
- en: Since 1973 the U.S. Centers for Disease Control and Prevention (CDC) have conducted
    the National Survey of Family Growth (NSFG), which is intended to gather “information
    on family life, marriage and divorce, pregnancy, infertility, use of contraception,
    and men’s and women’s health. The survey results are used…to plan health services
    and health education programs, and to do statistical studies of families, fertility,
    and health.”
  prefs: []
  type: TYPE_NORMAL
- en: You can read more about the NSFG at [http://cdc.gov/nchs/nsfg.htm](http://cdc.gov/nchs/nsfg.htm).
  prefs: []
  type: TYPE_NORMAL
- en: We will use data collected by this survey to investigate whether first babies
    tend to be born late, and other questions. In order to use this data effectively,
    we have to understand the design of the study.
  prefs: []
  type: TYPE_NORMAL
- en: In general, the goal of a statistical study is to draw conclusions about a **population**.
    In the NSFG, the target population is people in the United States aged 15-44.
  prefs: []
  type: TYPE_NORMAL
- en: Ideally surveys would collect data from every member of the population, but
    that’s seldom possible. Instead we collect data from a subset of the population
    called a **sample**. The people who participate in a survey are called **respondents**.
  prefs: []
  type: TYPE_NORMAL
- en: The NSFG is a **cross-sectional** study, which means that it captures a snapshot
    of a population at a point in time. The NSFG has been conducted several times
    now; each deployment is called a **cycle**. We will use data from Cycle 6, which
    was conducted from January 2002 to March 2003.
  prefs: []
  type: TYPE_NORMAL
- en: In general, cross-sectional studies are meant to be **representative**, which
    means that the sample is similar to the target population in all ways that are
    important for the purposes of the study. That ideal is hard to achieve in practice,
    but people who conduct surveys come as close as they can.
  prefs: []
  type: TYPE_NORMAL
- en: The NSFG is not representative; instead it is **stratified**, which means that
    it deliberately **oversamples** some groups. The designers of the study recruited
    three groups – Hispanics, African-Americans and teenagers – at rates higher than
    their representation in the U.S. population, in order to make sure that the number
    of respondents in each group is large enough to draw valid conclusions. The drawback
    of oversampling is that it is not as easy to draw conclusions about the population
    based on statistics from the sample. We will come back to this point later.
  prefs: []
  type: TYPE_NORMAL
- en: When working with this kind of data, it is important to be familiar with the
    **codebook**, which documents the design of the study, the survey questions, and
    the encoding of the responses.
  prefs: []
  type: TYPE_NORMAL
- en: The codebook and user’s guide for the NSFG data are available from [http://www.cdc.gov/nchs/nsfg/nsfg_cycle6.htm](http://www.cdc.gov/nchs/nsfg/nsfg_cycle6.htm)
  prefs: []
  type: TYPE_NORMAL
- en: Reading the Data
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Before downloading NSFG data, you have to agree to the terms of use:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Any intentional identification or disclosure of an individual or establishment
    violates the assurances of confidentiality given to the providers of the information.
    Therefore, users will:'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Use the data in this dataset for statistical reporting and analysis only.
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Make no attempt to learn the identity of any person or establishment included
    in these data.
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Not link this dataset with individually identifiable data from other NCHS or
    non-NCHS datasets.
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Not engage in any efforts to assess disclosure methodologies applied to protect
    individuals and establishments or any research on methods of re-identification
    of individuals and establishments.
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: If you agree to comply with these terms, instructions for downloading the data
    are in the notebook for this chapter.
  prefs: []
  type: TYPE_NORMAL
- en: The data files are available directly from the NSFG web site at [https://www.cdc.gov/nchs/data_access/ftp_dua.htm?url_redirect=ftp://ftp.cdc.gov/pub/Health_Statistics/NCHS/Datasets/NSFG](https://www.cdc.gov/nchs/data_access/ftp_dua.htm?url_redirect=ftp://ftp.cdc.gov/pub/Health_Statistics/NCHS/Datasets/NSFG),
    but we will download them from the repository for this book, which provides a
    compressed version of the data file.
  prefs: []
  type: TYPE_NORMAL
- en: The following cells download the data files and install `statadict`, which we
    need to read the data.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: The data is stored in two files, a “dictionary” that describes the format of
    the data, and a data file.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: The notebook for this chapter defines a function that reads these files. It
    is called `read_stata` because this data format is compatible with a statistical
    software package called Stata.
  prefs: []
  type: TYPE_NORMAL
- en: The following function takes these file names as arguments, reads the dictionary,
    and uses the results to read the data file.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Here’s how we use it.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: The result is a `DataFrame`, which is a Pandas data structure that represents
    tabular data in rows and columns. This `DataFrame` contains a row for each pregnancy
    reported by a respondent and a column for each **variable**. A variable can contain
    responses to a survey question or values that are calculated based on responses
    to one or more questions.
  prefs: []
  type: TYPE_NORMAL
- en: In addition to the data, a `DataFrame` also contains the variable names and
    their types, and it provides methods for accessing and modifying the data. The
    `DataFrame` has an attribute called `shape` that contains the number of rows and
    columns.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: This dataset has 243 variables with information about 13,593 pregnancies. The
    `DataFrame` provides a method called `head` that displays the first few rows.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: '|  | caseid | pregordr | howpreg_n | howpreg_p | moscurrp | nowprgdk | pregend1
    | pregend2 | nbrnaliv | multbrth | ... | poverty_i | laborfor_i | religion_i |
    metro_i | basewgt | adj_mod_basewgt | finalwgt | secu_p | sest | cmintvw |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---
    | --- | --- | --- | --- | --- | --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| 0 | 1 | 1 | NaN | NaN | NaN | NaN | 6.0 | NaN | 1.0 | NaN | ... | 0 | 0 |
    0 | 0 | 3410.389399 | 3869.349602 | 6448.271112 | 2 | 9 | 1231 |'
  prefs: []
  type: TYPE_TB
- en: '| 1 | 1 | 2 | NaN | NaN | NaN | NaN | 6.0 | NaN | 1.0 | NaN | ... | 0 | 0 |
    0 | 0 | 3410.389399 | 3869.349602 | 6448.271112 | 2 | 9 | 1231 |'
  prefs: []
  type: TYPE_TB
- en: '| 2 | 2 | 1 | NaN | NaN | NaN | NaN | 5.0 | NaN | 3.0 | 5.0 | ... | 0 | 0 |
    0 | 0 | 7226.301740 | 8567.549110 | 12999.542264 | 2 | 12 | 1231 |'
  prefs: []
  type: TYPE_TB
- en: '| 3 | 2 | 2 | NaN | NaN | NaN | NaN | 6.0 | NaN | 1.0 | NaN | ... | 0 | 0 |
    0 | 0 | 7226.301740 | 8567.549110 | 12999.542264 | 2 | 12 | 1231 |'
  prefs: []
  type: TYPE_TB
- en: '| 4 | 2 | 3 | NaN | NaN | NaN | NaN | 6.0 | NaN | 1.0 | NaN | ... | 0 | 0 |
    0 | 0 | 7226.301740 | 8567.549110 | 12999.542264 | 2 | 12 | 1231 |'
  prefs: []
  type: TYPE_TB
- en: 5 rows × 243 columns
  prefs: []
  type: TYPE_NORMAL
- en: The left column is the index of the `DataFrame`, which contains a label for
    each row. In this case, the labels are integers starting from 0, but they can
    also be strings and other types.
  prefs: []
  type: TYPE_NORMAL
- en: The `DataFrame` has an attribute called `columns` that contains the names of
    the variables.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: The column names are contained in an `Index` object, which is another Pandas
    data structure. To access a column from a `DataFrame`, you can use the column
    name as a key.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: The result is a Pandas `Series`, which represents a sequence of values. `Series`
    also provides `head`, which displays the first few values and their labels.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: The last line includes the name of the `Series` and `dtype`, which is the type
    of the values. In this example, `int64` indicates that the values are 64-bit integers.
  prefs: []
  type: TYPE_NORMAL
- en: The NSFG dataset contains 243 variables in total. Here are some of the ones
    we’ll use for the explorations in this book.
  prefs: []
  type: TYPE_NORMAL
- en: '`caseid` is the integer ID of the respondent.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pregordr` is a pregnancy serial number: the code for a respondent’s first
    pregnancy is 1, for the second pregnancy is 2, and so on.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`prglngth` is the integer duration of the pregnancy in weeks.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`outcome` is an integer code for the outcome of the pregnancy. The code 1 indicates
    a live birth.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`birthord` is a serial number for live births: the code for a respondent’s
    first child is 1, and so on. For outcomes other than live birth, this field is
    blank.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`birthwgt_lb` and `birthwgt_oz` contain the pounds and ounces parts of the
    birth weight of the baby.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`agepreg` is the mother’s age at the end of the pregnancy.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`finalwgt` is the statistical weight associated with the respondent. It is
    a floating-point value that indicates the number of people in the U.S. population
    this respondent represents.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If you read the codebook carefully, you will see that many of the variables
    are **recodes**, which means that they are not part of the **raw data** collected
    by the survey – they are calculated using the raw data.
  prefs: []
  type: TYPE_NORMAL
- en: For example, `prglngth` for live births is equal to the raw variable `wksgest`
    (weeks of gestation) if it is available; otherwise it is estimated using `mosgest
    * 4.33` (months of gestation times the average number of weeks in a month).
  prefs: []
  type: TYPE_NORMAL
- en: Recodes are often based on logic that checks the consistency and accuracy of
    the data. In general it is a good idea to use recodes when they are available,
    unless there is a compelling reason to process the raw data yourself.
  prefs: []
  type: TYPE_NORMAL
- en: Validation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: When data is exported from one software environment and imported into another,
    errors might be introduced. And when you are getting familiar with a new dataset,
    you might decode data incorrectly or misunderstandings its meaning. If you invest
    time to validate the data, you can save time later and avoid errors.
  prefs: []
  type: TYPE_NORMAL
- en: One way to validate data is to compute basic statistics and compare them with
    published results. For example, the NSFG codebook includes tables that summarize
    each variable. Here is the table for `outcome`, which encodes the outcome of each
    pregnancy.
  prefs: []
  type: TYPE_NORMAL
- en: '| Value | Label | Total |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| 1 | LIVE BIRTH | 9148 |'
  prefs: []
  type: TYPE_TB
- en: '| 2 | INDUCED ABORTION | 1862 |'
  prefs: []
  type: TYPE_TB
- en: '| 3 | STILLBIRTH | 120 |'
  prefs: []
  type: TYPE_TB
- en: '| 4 | MISCARRIAGE | 1921 |'
  prefs: []
  type: TYPE_TB
- en: '| 5 | ECTOPIC PREGNANCY | 190 |'
  prefs: []
  type: TYPE_TB
- en: '| 6 | CURRENT PREGNANCY | 352 |'
  prefs: []
  type: TYPE_TB
- en: '| Total |  | 13593 |'
  prefs: []
  type: TYPE_TB
- en: The “Total” column indicates the number of pregnancies with each outcome. To
    check these totals, we’ll use the `value_counts` method, which counts the number
    of times each value appears, and `sort_index`, which sorts the results according
    to the values in the `Index` (the left column).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: Comparing the results with the published table, we can confirm that the values
    in `outcome` are correct. Similarly, here is the published table for `birthwgt_lb`.
  prefs: []
  type: TYPE_NORMAL
- en: '| Value | Label | Total |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| . | inapplicable | 4449 |'
  prefs: []
  type: TYPE_TB
- en: '| 0-5 | UNDER 6 POUNDS | 1125 |'
  prefs: []
  type: TYPE_TB
- en: '| 6 | 6 POUNDS | 2223 |'
  prefs: []
  type: TYPE_TB
- en: '| 7 | 7 POUNDS | 3049 |'
  prefs: []
  type: TYPE_TB
- en: '| 8 | 8 POUNDS | 1889 |'
  prefs: []
  type: TYPE_TB
- en: '| 9-95 | 9 POUNDS OR MORE | 799 |'
  prefs: []
  type: TYPE_TB
- en: '| 97 | Not ascertained | 1 |'
  prefs: []
  type: TYPE_TB
- en: '| 98 | REFUSED | 1 |'
  prefs: []
  type: TYPE_TB
- en: '| 99 | DON''T KNOW | 57 |'
  prefs: []
  type: TYPE_TB
- en: '| Total |  | 13593 |'
  prefs: []
  type: TYPE_TB
- en: Birth weight is only recorded for pregnancies that ended in a live birth. The
    table indicates that there are 4449 cases where this variable is inapplicable.
    In addition, there is one case where the question was not asked, one where the
    respondent did not answer, and 57 cases where they did not know.
  prefs: []
  type: TYPE_NORMAL
- en: Again, we can use `value_counts` to compare the counts in the dataset to the
    counts in the codebook.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: The argument `dropna=False` means that `value_counts` does not ignore values
    that are “NA” or “Not applicable”. These values appear in the results as `NaN`,
    which stands for “Not a number” – and the count of these values is consistent
    with the count of inapplicable cases in the codebook.
  prefs: []
  type: TYPE_NORMAL
- en: The counts for 6, 7, and 8 pounds are consistent with the codebook. To check
    the counts for the weight range from 0 to 5 pounds, we can use an attribute called
    `loc` – which is short for “location” – and a slice index to select a subset of
    the counts.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: And we can use the `sum` method to add them up.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: The total is consistent with the codebook.
  prefs: []
  type: TYPE_NORMAL
- en: The values 97, 98, and 99 represent cases where the birth weight is unknown.
    There are several ways we might handle missing data. A simple option is to replace
    these values with `NaN`. At the same time, we will also replace a value that is
    clearly wrong, 51 pounds.
  prefs: []
  type: TYPE_NORMAL
- en: 'We can use the replace method like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: The first argument is a list of values to be replaced. The second argument,
    `np.nan`, gets the `NaN` value from NumPy.
  prefs: []
  type: TYPE_NORMAL
- en: When you read data like this, you often have to check for errors and deal with
    special values. Operations like this are called **data cleaning**.
  prefs: []
  type: TYPE_NORMAL
- en: Transformation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: As another kind of data cleaning, sometimes we have to convert data into different
    formats, and perform other calculations.
  prefs: []
  type: TYPE_NORMAL
- en: For example, `agepreg` contains the mother’s age at the end of the pregnancy.
    According to the codebook, it is an integer number of centiyears (hundredths of
    a year), as we can tell if we use the `mean` method to compute its average.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: To convert it to years, we can divide through by 100.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: Now the average is more credible.
  prefs: []
  type: TYPE_NORMAL
- en: As another example, `birthwgt_lb` and `birthwgt_oz` contain birth weights with
    the pounds and ounces in separate columns. It will be more convenient to combine
    them into as single column that contains weights in pounds and fractions of a
    pound.
  prefs: []
  type: TYPE_NORMAL
- en: First we’ll clean `birthwgt_oz` as we did with `birthwgt_lb`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: Now we can use the cleaned values to create a new column that combines pounds
    and ounces into a single quantity.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
- en: The average of the result seems plausible.
  prefs: []
  type: TYPE_NORMAL
- en: '## Summary Statistics'
  prefs: []
  type: TYPE_NORMAL
- en: A **statistic** is a number derived from a dataset, usually intended to quantify
    some aspect of the data. Examples include the count, mean, variance, and standard
    deviation.
  prefs: []
  type: TYPE_NORMAL
- en: A `Series` object has a `count` method that returns the number of values that
    are not `nan`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE36]'
  prefs: []
  type: TYPE_PRE
- en: It also provides a `sum` method that returns the sum of the values – we can
    use it to compute the mean like this.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE37]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE38]'
  prefs: []
  type: TYPE_PRE
- en: But as we’ve already seen, there’s also a `mean` method that does the same thing.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE39]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE40]'
  prefs: []
  type: TYPE_PRE
- en: In this dataset, the average birth weight is about 7.3 pounds.
  prefs: []
  type: TYPE_NORMAL
- en: Variance is a statistic that quantifies the spread of a set of values. It is
    the mean of the squared deviations, which are the distances of each point from
    the mean.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE41]'
  prefs: []
  type: TYPE_PRE
- en: We can compute the mean of the squared deviations like this.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE42]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE43]'
  prefs: []
  type: TYPE_PRE
- en: As you might expect, `Series` provides a `var` method that does *almost* the
    same thing.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE44]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE45]'
  prefs: []
  type: TYPE_PRE
- en: The result is slightly different because when the `var` method computes the
    mean of the squared deviations, it divides by `n-1` rather than `n`. That’s because
    there are two ways to compute the variance of a sample, depending on what you
    are trying to do. I’ll explain the difference in [Chapter 8](chap08.html#section-estimating-variance)
    – but in practice it usually doesn’t matter. If you prefer the version with `n`
    in the denominator, you can get it by passing `ddof=0` as a keyword argument to
    the `var` method.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE46]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE47]'
  prefs: []
  type: TYPE_PRE
- en: In this dataset, the variance of the birth weights is about 1.98, but that value
    is hard to interpret – for one thing, it is in units of pounds squared. Variance
    is useful in some computations, but not a good way to describe a dataset. A better
    option is the **standard deviation**, which is the square root of variance. We
    can compute it like this.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE48]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE49]'
  prefs: []
  type: TYPE_PRE
- en: Or, we can use the `std` method.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE50]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE51]'
  prefs: []
  type: TYPE_PRE
- en: In this dataset, the standard deviation of birth weights is about 1.4 pounds.
    Informally, values that are one or two standard deviations from the mean are common
    – values farther from the mean are rare.
  prefs: []
  type: TYPE_NORMAL
- en: Interpretation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To work with data effectively, you have to think on two levels at the same
    time: the level of statistics and the level of context. As an example, let’s select
    the rows in the pregnancy file with `caseid` 10229. The `query` method takes a
    string that can contain column names, comparison operators, and numbers, among
    other things.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE52]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE53]'
  prefs: []
  type: TYPE_PRE
- en: The result is a `DataFrame` that contains only the rows where the query is `True`.
    This respondent reported seven pregnancies – here are their outcomes, which are
    recorded in chronological order.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE54]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE55]'
  prefs: []
  type: TYPE_PRE
- en: The outcome code `1` indicates a live birth. Code `4` indicates a miscarriage
    – that is, a pregnancy loss, usually with no known medical cause.
  prefs: []
  type: TYPE_NORMAL
- en: Statistically this respondent is not unusual. Pregnancy loss is common and there
    are other respondents who reported as many instances. But remembering the context,
    this data tells the story of a woman who was pregnant six times, each time ending
    in miscarriage. Her seventh and most recent pregnancy ended in a live birth. If
    we consider this data with empathy, it is natural to be moved by the story it
    tells.
  prefs: []
  type: TYPE_NORMAL
- en: Each row in the NSFG dataset represents a person who provided honest answers
    to many personal and difficult questions. We can use this data to answer statistical
    questions about family life, reproduction, and health. At the same time, we have
    an obligation to consider the people represented by the data, and to afford them
    respect and gratitude.
  prefs: []
  type: TYPE_NORMAL
- en: Glossary
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The end of each chapter provides a glossary of words that are defined in the
    chapter.
  prefs: []
  type: TYPE_NORMAL
- en: '**anecdotal evidence:** Data collected informally from a small number of individual
    cases, often without systematic sampling.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**cross-sectional study:** A study that collects data from a representative
    sample of a population at a single point or interval in time.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**cycle:** One data-collection interval in a study that collects data at multiple
    intervals in time.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**population:** The entire group of individuals or items that is the subject
    of a study.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**sample:** A subset of a population, often chosen at random.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**respondents:** People who participate in a survey and respond to questions.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**representative:** A sample is representative if it is similar to the population
    in ways that are important for the purposes of the study.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**stratified:** A sample is stratified if it deliberately oversamples some
    groups, usually to make sure that enough members are included to support valid
    conclusions.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**oversampled:** A group is oversampled if its members have a higher chance
    of appearing in a sample.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**variable:** In survey data, a variable is a collection of responses to questions
    or values computed from responses.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**codebook:** A document that describes the variables in a dataset, and provides
    other information about the data.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**recode:** A variable that is computed based on other variables in a dataset.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**raw data:** Data that has not been processed after collection.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**data cleaning:** A process for identifying and correcting errors in a dataset,
    dealing with missing values, and computing recodes.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**statistic:** A value that describes or summarizes a property of a sample.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**standard deviation:** A statistic that quantifies the spread of data around
    the mean.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Exercises
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The exercises for this chapter are based on the NSFG pregnancy file.
  prefs: []
  type: TYPE_NORMAL
- en: Exercise 1.1
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Select the `birthord` column from `preg`, print the value counts, and compare
    to results published in the codebook at [https://ftp.cdc.gov/pub/Health_Statistics/NCHS/Dataset_Documentation/NSFG/Cycle6Codebook-Pregnancy.pdf](https://ftp.cdc.gov/pub/Health_Statistics/NCHS/Dataset_Documentation/NSFG/Cycle6Codebook-Pregnancy.pdf).
  prefs: []
  type: TYPE_NORMAL
- en: Exercise 1.2
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Create a new column named `totalwgt_kg` that contains birth weight in kilograms
    (there are approximately 2.2 pounds per kilogram). Compute the mean and standard
    deviation of the new column.
  prefs: []
  type: TYPE_NORMAL
- en: Exercise 1.3
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: What are the pregnancy lengths for the respondent with `caseid` 2298?
  prefs: []
  type: TYPE_NORMAL
- en: 'What was the birth weight of the first baby born to the respondent with `caseid`
    5013? Hint: You can use `and` to check more than one condition in a query.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Think Stats: Exploratory Data Analysis in Python, 3rd Edition](https://allendowney.github.io/ThinkStats/index.html)'
  prefs: []
  type: TYPE_NORMAL
- en: Copyright 2024 [Allen B. Downey](https://allendowney.com)
  prefs: []
  type: TYPE_NORMAL
- en: 'Code license: [MIT License](https://mit-license.org/)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Text license: [Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International](https://creativecommons.org/licenses/by-nc-sa/4.0/)'
  prefs: []
  type: TYPE_NORMAL
